<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="theme-color" content="#333333">
    <meta name="color-scheme" content="dark">
    <title>Emojis in GitHub</title>
    <style>
        :root {
            --bg-color-bg: #eeffee;
        }

        body {
            width: 100%;
            margin: 0 0 0 0;
            padding: 0 0 0 0;
            overflow-x: hidden;
            overflow-y: auto;
            text-decoration: none;
            background-color: var(--bg-color-bg);
            scroll-behavior: smooth;
            font-family: Helvetica, Segoe, Segoe UI, Calibri, Candara, Arial, sans-serif;
        }

        img {
            height: 2em;
        }

        div#emojis {
            color: #000;
            display: flex;
            flex-direction: row;
            justify-content: flex-start;
        }

        .emoji {
            height: 2em;
            text-decoration: none;
            margin: 0 0 0 0;
            padding: 0 0 0 0;
        }


        ul {
            list-style: none;
            margin: 0 0 0 0;
        }

        .hide {
            display: none;
        }

        a {
            text-decoration: none;
        }

        p {
            color: #000;
        }

        h1 {
            font-family: Verdana, Geneva, sans-serif;
            font-size: clamp(10px, 5vw, 40px);
            margin: 0 0 0 0;
            padding: 1vh 1vw 1vh 1vw;
            color: #000;
        }
    </style>
</head>

<body>
    <h1>Emojis list from <a id="a-api"></a></h1>
    <p>Hover/click an icon to display emoji code.</p>
    <p>Search: <input oninput="filterEmojis(this.value)"></input></p>
    <div id="emojis"></div>
    <script>
        const urlapi = "https://api.github.com/emojis";
        document.querySelector('#a-api').href = urlapi;
        document.querySelector('#a-api').textContent = urlapi;

        var emojis;

        window.onload = () => {
            var xhttp = new XMLHttpRequest();
            xhttp.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {
                    emojis = Object.entries(JSON.parse(this.response));
                    loadEmojis(emojis);
                }
            };
            xhttp.onerror = e => console.error('Error in xhttpReq: ' + e);
            xhttp.open("GET", urlapi, true);
            xhttp.send();
        }

        function loadEmojis(emojis) {
            let emojisDiv = document.querySelector('#emojis');
            for (var property of emojis) {
                let card = document.createElement('div');
                card.id = "div-" + property[0].toString();
                card.className = "emoji";
                let item = document.createElement('img');
                let code = property[0];
                item.id = code;
                item.src = property[1];
                item.title = ':' + code + ':';
                item.onclick = () => alert(':' + code + ':');
                card.appendChild(item);
                emojisDiv.appendChild(card);
            }
        }

        function filterEmojis(filter) {
            let v = [];
            emojis.filter(e => e[0].includes(filter)).forEach(e => v.push(e[0]));
            document.querySelectorAll('#emojis img').forEach(i => i.className = (v.indexOf(i.id) == -1) ? "hide" : "");
        }
    </script>
</body>

</html>